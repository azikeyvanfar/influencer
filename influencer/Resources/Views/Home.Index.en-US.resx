<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Advertise" xml:space="preserve">
    <value>Are you going to advertise?</value>
  </data>
  <data name="AppInstalls" xml:space="preserve">
    <value>App Installs</value>
  </data>
  <data name="artandMusic" xml:space="preserve">
    <value>art and music</value>
  </data>
  <data name="Brand" xml:space="preserve">
    <value>Are you a brand?</value>
  </data>
  <data name="BrandAwareness" xml:space="preserve">
    <value>Brand Awareness</value>
  </data>
  <data name="BrandManager" xml:space="preserve">
    <value>Are you brand manager?</value>
  </data>
  <data name="BrandOwner" xml:space="preserve">
    <value>Are you brand owner?</value>
  </data>
  <data name="Budget" xml:space="preserve">
    <value>What is your primery goal?</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Your message has been sent!</value>
  </data>
  <data name="Consultation" xml:space="preserve">
    <value>SET UP A FREE CONSULTATION</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>SETUP YOUR  ORDER</value>
  </data>
  <data name="ContactUS" xml:space="preserve">
    <value>Contact US</value>
  </data>
  <data name="ContentCreator" xml:space="preserve">
    <value>Are you a content creator?</value>
  </data>
  <data name="Cost" xml:space="preserve">
    <value>Cost</value>
  </data>
  <data name="Culculate" xml:space="preserve">
    <value>Culculate</value>
  </data>
  <data name="CustomerAcquisition" xml:space="preserve">
    <value>Customer Acquisition</value>
  </data>
  <data name="DesciptionSlide1" xml:space="preserve">
    <value>Every moment is an opportunity</value>
  </data>
  <data name="DesciptionSlide2" xml:space="preserve">
    <value />
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EXPERTSNOW" xml:space="preserve">
    <value>SPEAK WITH ONE OF OUR INSTAGRAM EXPERTS NOW</value>
  </data>
  <data name="fact" xml:space="preserve">
    <value>fact</value>
  </data>
  <data name="Favorite" xml:space="preserve">
    <value>Favorite</value>
  </data>
  <data name="foods" xml:space="preserve">
    <value>foods</value>
  </data>
  <data name="funny" xml:space="preserve">
    <value>funny</value>
  </data>
  <data name="GETINTOUCH" xml:space="preserve">
    <value>GET IN TOUCH WITH US TODAY</value>
  </data>
  <data name="GetStarted" xml:space="preserve">
    <value>Get Started</value>
  </data>
  <data name="health" xml:space="preserve">
    <value>health</value>
  </data>
  <data name="HelpAdsfluencer" xml:space="preserve">
    <value>Are you ready to help Adsfluencer to make some explosion on Instagram?</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="HowToWork" xml:space="preserve">
    <value>Do you have any questions about how to work with?</value>
  </data>
  <data name="ImpressionBased" xml:space="preserve">
    <value>Impression-based Ads</value>
  </data>
  <data name="ImpressionBasedDes" xml:space="preserve">
    <value>In this case, brands or services are advertised by famous influencers who have a large number of followers. And the basis of calculation is based on the number of times the ad is seen.</value>
  </data>
  <data name="Instagram" xml:space="preserve">
    <value>Instagram</value>
  </data>
  <data name="InstagramPage" xml:space="preserve">
    <value>Do you need an admin for your Instagram page?</value>
  </data>
  <data name="IntroduceStartUp" xml:space="preserve">
    <value>Introduce StartUp</value>
  </data>
  <data name="ladies" xml:space="preserve">
    <value>ladies</value>
  </data>
  <data name="lifestyle" xml:space="preserve">
    <value>life style</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="Market" xml:space="preserve">
    <value>Your Marketing Budget</value>
  </data>
  <data name="more" xml:space="preserve">
    <value>more</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NeedTraining" xml:space="preserve">
    <value>Are you a beginner and need training?</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Numberofviews" xml:space="preserve">
    <value>Number of views</value>
  </data>
  <data name="Pages" xml:space="preserve">
    <value>Pages</value>
  </data>
  <data name="Post" xml:space="preserve">
    <value>Post</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="ProfessionalBlogger" xml:space="preserve">
    <value>Are you a professional blogger?</value>
  </data>
  <data name="ReadyToMakeExplosion" xml:space="preserve">
    <value>Are you ready to make some explosion on Instagram?</value>
  </data>
  <data name="SendRequest" xml:space="preserve">
    <value>Send Request</value>
  </data>
  <data name="SentMessage" xml:space="preserve">
    <value>Your message has been sent. Thank you!</value>
  </data>
  <data name="SmallBusiness" xml:space="preserve">
    <value>Have you started a small business</value>
  </data>
  <data name="SocialMedia" xml:space="preserve">
    <value>Social Media</value>
  </data>
  <data name="Soon" xml:space="preserve">
    <value>Soon</value>
  </data>
  <data name="sports" xml:space="preserve">
    <value>sports</value>
  </data>
  <data name="Startup" xml:space="preserve">
    <value>Have you a startup?</value>
  </data>
  <data name="Story" xml:space="preserve">
    <value>Story</value>
  </data>
  <data name="StoryBased" xml:space="preserve">
    <value>Story-Based Ads</value>
  </data>
  <data name="StoryBasedDes" xml:space="preserve">
    <value>In this case, brands or services are advertised by famous influencers who have a large number of followers. And the basis of calculation is based on the number of times the ad is seen in Story.</value>
  </data>
  <data name="successAndMotivation" xml:space="preserve">
    <value>success</value>
  </data>
  <data name="teaching" xml:space="preserve">
    <value>teaching</value>
  </data>
  <data name="TestAdsfluencer" xml:space="preserve">
    <value>Test Adsfluencer</value>
  </data>
  <data name="TimeBased" xml:space="preserve">
    <value>Time-based Ads</value>
  </data>
  <data name="TimeBasedDes" xml:space="preserve">
    <value>In this case, brands or services are advertised by bloggers and influencers who have a large number of followers. And the basis of calculation is based on the time in 24 hours</value>
  </data>
  <data name="TitleSlide" xml:space="preserve">
    <value>In Adsfluencer</value>
  </data>
  <data name="UseCompanyEmail" xml:space="preserve">
    <value>Please use a company email address</value>
  </data>
  <data name="WhatFav" xml:space="preserve">
    <value>What are you favorite topics?</value>
  </data>
  <data name="WhichSocialMedia" xml:space="preserve">
    <value>Which social media are you interested in?</value>
  </data>
  <data name="WithAdsfluencer" xml:space="preserve">
    <value>with Adsfluencer</value>
  </data>
  <data name="YouCreator" xml:space="preserve">
    <value>Are you a creator?</value>
  </data>
  <data name="YourName" xml:space="preserve">
    <value>YourName</value>
  </data>
</root>
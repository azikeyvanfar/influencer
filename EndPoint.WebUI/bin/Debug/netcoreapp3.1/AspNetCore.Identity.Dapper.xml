<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AspNetCore.Identity.Dapper</name>
    </assembly>
    <members>
        <member name="T:AspNetCore.Identity.Dapper.IRoleClaimsTable`2">
            <summary>
            Abstraction for interacting with AspNetRoleClaims table.
            </summary>
            <typeparam name="TKey">The type of the primary key for a role.</typeparam>
            <typeparam name="TRoleClaim">The type of the class representing a role claim.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IRoleClaimsTable`2.GetClaimsAsync(`0)">
            <summary>
            Gets a list of claims to be belonging to the specified role.
            </summary>
            <param name="roleId">The id of the role.</param>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.IRolesTable`3">
            <summary>
            Abstraction for interacting with AspNetRoles table.
            </summary>
            <typeparam name="TRole">The type of the class representing a role.</typeparam>
            <typeparam name="TKey">The type of the primary key for a role.</typeparam>
            <typeparam name="TRoleClaim">The type of the class representing a role claim.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IRolesTable`3.CreateAsync(`0)">
            <summary>
            Creates a new role in the store.
            </summary>
            <param name="role">The role to create in the store.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IRolesTable`3.DeleteAsync(`1)">
            <summary>
            Deletes a role from the store.
            </summary>
            <param name="roleId">The id of the role to delete from the store.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IRolesTable`3.FindByIdAsync(`1)">
            <summary>
            Finds the role who has the specified id.
            </summary>
            <param name="roleId">The role id to look for.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IRolesTable`3.FindByNameAsync(System.String)">
            <summary>
            Finds the role who has the specified normalized name.
            </summary>
            <param name="normalizedName">The normalized role name to look for.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IRolesTable`3.UpdateAsync(`0,System.Collections.Generic.IList{`2})">
            <summary>
            Updates a role in the store.
            </summary>
            <param name="role">The role to update in the store.</param>
            <param name="claims">The claims of the role.</param>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.IUserClaimsTable`2">
            <summary>
            Abstraction for interacting with AspNetUserClaims table.
            </summary>
            <typeparam name="TKey">The type of the primary key for a user.</typeparam>
            <typeparam name="TUserClaim">The type representing a claim.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUserClaimsTable`2.GetClaimsAsync(`0)">
            <summary>
            Gets a list of claims to be belonging to the specified user.
            </summary>
            <param name="userId">The id of the user.</param>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.IUserLoginsTable`3">
            <summary>
            Abstraction for interacting with AspNetUserLogins table.
            </summary>
            <typeparam name="TUser">The type representing a user.</typeparam>
            <typeparam name="TKey">The type of the primary key for a user.</typeparam>
            <typeparam name="TUserLogin">The type representing a user external login.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUserLoginsTable`3.GetLoginsAsync(`1)">
            <summary>
            Gets a list of external logins to be belonging to the specified user.
            </summary>
            <param name="userId">The id of the user.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUserLoginsTable`3.FindByLoginAsync(System.String,System.String)">
            <summary>
            Finds the user that owns a specified login.
            </summary>
            <param name="loginProvider">The login provider.</param>
            <param name="providerKey">The provider key.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUserLoginsTable`3.FindUserLoginAsync(System.String,System.String)">
            <summary>
            Finds a user login.
            </summary>
            <param name="loginProvider">The login provider.</param>
            <param name="providerKey">The provider key.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUserLoginsTable`3.FindUserLoginAsync(`1,System.String,System.String)">
            <summary>
            Finds a user login.
            </summary>
            <param name="userId">The id of the user.</param>
            <param name="loginProvider">The login provider.</param>
            <param name="providerKey">The provider key.</param>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.IUserRolesTable`3">
            <summary>
            Abstraction for interacting with AspNetUserRoles table.
            </summary>
            <typeparam name="TKey">The type of the primary key for a user.</typeparam>
            <typeparam name="TRole">The type representing a role.</typeparam>
            <typeparam name="TUserRole">The type representing a user role.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUserRolesTable`3.GetRolesAsync(`1)">
            <summary>
            Gets a list of roles to be belonging to the specified user.
            </summary>
            <param name="userId">The id of the user.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUserRolesTable`3.FindUserRoleAsync(`1,`1)">
            <summary>
            Find the specified role for a certain user.
            </summary>
            <param name="userId">The id of the user.</param>
            <param name="roleId">The id of the role.</param>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.IUsersOnlyTable`5">
            <summary>
            Abstraction for interacting with AspNetUsers table.
            </summary>
            <typeparam name="TUser">The type representing a user.</typeparam>
            <typeparam name="TKey">The type of the primary key for a role and user.</typeparam>
            <typeparam name="TUserClaim">The type representing a claim.</typeparam>
            <typeparam name="TUserLogin">The type representing a user external login.</typeparam>
            <typeparam name="TUserToken">The type representing a user token.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUsersOnlyTable`5.CreateAsync(`0)">
            <summary>
            Creates a new user in the store.
            </summary>
            <param name="user">The user to create in the store.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUsersOnlyTable`5.DeleteAsync(`1)">
            <summary>
            Deletes a user from the store.
            </summary>
            <param name="userId">The id of the user to delete from the store.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUsersOnlyTable`5.FindByIdAsync(`1)">
            <summary>
            Finds the user who has the specified id.
            </summary>
            <param name="userId">The user id to look for.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUsersOnlyTable`5.FindByNameAsync(System.String)">
            <summary>
            Finds the user who has the specified username.
            </summary>
            <param name="normalizedUserName">The username to look for.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUsersOnlyTable`5.FindByEmailAsync(System.String)">
            <summary>
            Finds the user who has the specified email.
            </summary>
            <param name="normalizedEmail">The email to look for.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUsersOnlyTable`5.UpdateAsync(`0,System.Collections.Generic.IList{`2},System.Collections.Generic.IList{`3},System.Collections.Generic.IList{`4})">
            <summary>
            Updates a user in the store.
            </summary>
            <param name="user">The user to update in the store.</param>
            <param name="claims">The claims of the user.</param>
            <param name="logins">The logins of the user.</param>
            <param name="tokens">The tokens of the user.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUsersOnlyTable`5.GetUsersForClaimAsync(System.Security.Claims.Claim)">
            <summary>
            Gets the users that own the specified claim.
            </summary>
            <param name="claim">The claim to look for.</param>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.IUsersTable`6">
            <summary>
            Abstraction for interacting with AspNetUsers table.
            </summary>
            <typeparam name="TUser">The type representing a user.</typeparam>
            <typeparam name="TKey">The type of the primary key for a role and user.</typeparam>
            <typeparam name="TUserClaim">The type representing a claim.</typeparam>
            <typeparam name="TUserRole">The type representing a user role.</typeparam>
            <typeparam name="TUserLogin">The type representing a user external login.</typeparam>
            <typeparam name="TUserToken">The type representing a user token.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUsersTable`6.UpdateAsync(`0,System.Collections.Generic.IList{`2},System.Collections.Generic.IList{`3},System.Collections.Generic.IList{`4},System.Collections.Generic.IList{`5})">
            <summary>
            Updates a user in the store.
            </summary>
            <param name="user">The user to update in the store.</param>
            <param name="claims">The claims of the user.</param>
            <param name="roles">The roles of the user.</param>
            <param name="logins">The logins of the user.</param>
            <param name="tokens">The tokens of the user.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUsersTable`6.GetUsersInRoleAsync(System.String)">
            <summary>
            Gets the users that belong to the specified role.
            </summary>
            <param name="roleName">The name of the role.</param>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.IUserTokensTable`2">
            <summary>
            Abstraction for interacting with AspNetUserTokens table.
            </summary>
            <typeparam name="TKey">The type of the primary key for a user.</typeparam>
            <typeparam name="TUserToken">The type representing a user token.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUserTokensTable`2.GetTokensAsync(`0)">
            <summary>
            Gets a list of tokens to be belonging to the specified user.
            </summary>
            <param name="userId">The id of the user.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IUserTokensTable`2.FindTokenAsync(`0,System.String,System.String)">
            <summary>
            Finds a token entry for the specified user.
            </summary>
            <param name="userId">The id of the user.</param>
            <param name="loginProvider">The login provider.</param>
            <param name="name">The token name.</param>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.DapperStoreOptions">
            <summary>
            Options for configuring Dapper stores.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.DapperStoreOptions.ConnectionString">
            <summary>
            The connection string to use for connecting to the data source.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.DapperStoreOptions.DbConnectionFactory">
            <summary>
            A factory for creating instances of <see cref="T:System.Data.IDbConnection"/>.
            </summary>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.IDbConnectionFactory">
            <summary>
            A factory for creating instances of <see cref="T:System.Data.IDbConnection"/>.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.IDbConnectionFactory.ConnectionString">
            <summary>
            The connection string to use for connecting to Microsoft SQL Server.
            </summary>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IDbConnectionFactory.Create">
            <summary>
            Creates a new instance of the underlying <see cref="T:System.Data.IDbConnection"/>.
            </summary>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.SqlServerDbConnectionFactory">
            <summary>
            Creates a new <see cref="T:System.Data.SqlClient.SqlConnection"/> instance for connecting to Microsoft SQL Server.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.SqlServerDbConnectionFactory.ConnectionString">
            <summary>
            The connection string to use for connecting to Microsoft SQL Server.
            </summary>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.SqlServerDbConnectionFactory.Create">
            <inheritdoc/>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.RoleStore`1">
            <summary>
            The persistence store for roles.
            </summary>
            <typeparam name="TRole">The type of the class representing a role.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`1.#ctor(AspNetCore.Identity.Dapper.IRolesTable{`0,System.String,Microsoft.AspNetCore.Identity.IdentityRoleClaim{System.String}},AspNetCore.Identity.Dapper.IRoleClaimsTable{System.String,Microsoft.AspNetCore.Identity.IdentityRoleClaim{System.String}},Microsoft.AspNetCore.Identity.IdentityErrorDescriber)">
            <summary>
            Constructs a new instance of <see cref="T:AspNetCore.Identity.Dapper.RoleStore`1"/>.
            </summary>
            <param name="rolesTable">Abstraction for interacting with Roles table.</param>
            <param name="roleClaimsTable">Abstraction for interacting with RoleClaims table.</param>
            <param name="describer">The <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber"/>.</param>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.RoleStore`2">
            <summary>
            The persistence store for roles.
            </summary>
            <typeparam name="TKey">The type of the primary key for a role.</typeparam>
            <typeparam name="TRole">The type of the class representing a role.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`2.#ctor(AspNetCore.Identity.Dapper.IRolesTable{`0,`1,Microsoft.AspNetCore.Identity.IdentityRoleClaim{`1}},AspNetCore.Identity.Dapper.IRoleClaimsTable{`1,Microsoft.AspNetCore.Identity.IdentityRoleClaim{`1}},Microsoft.AspNetCore.Identity.IdentityErrorDescriber)">
            <summary>
            Constructs a new instance of <see cref="T:AspNetCore.Identity.Dapper.RoleStore`2"/>.
            </summary>
            <param name="rolesTable">Abstraction for interacting with Roles table.</param>
            <param name="roleClaimsTable">Abstraction for interacting with RoleClaims table.</param>
            <param name="describer">The <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber"/>.</param>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.RoleStore`4">
            <summary>
            The persistence store for roles.
            </summary>
            <typeparam name="TRole">The type of the class representing a role.</typeparam>
            <typeparam name="TKey">The type of the primary key for a role.</typeparam>
            <typeparam name="TUserRole">The type of the class representing a user role.</typeparam>
            <typeparam name="TRoleClaim">The type of the class representing a role claim.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.#ctor(AspNetCore.Identity.Dapper.IRolesTable{`0,`1,`3},AspNetCore.Identity.Dapper.IRoleClaimsTable{`1,`3},Microsoft.AspNetCore.Identity.IdentityErrorDescriber)">
            <summary>
            Constructs a new instance of <see cref="T:AspNetCore.Identity.Dapper.RoleStore`4"/>.
            </summary>
            <param name="rolesTable">Abstraction for interacting with Roles table.</param>
            <param name="roleClaimsTable">Abstraction for interacting with RoleClaims table.</param>
            <param name="describer">The <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber"/>.</param>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.RoleStore`4.Roles">
            <inheritdoc/>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.RoleStore`4.RolesTable">
            <summary>
            Abstraction for interacting with Roles table.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.RoleStore`4.RoleClaimsTable">
            <summary>
            Abstraction for interacting with RoleClaims table.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.RoleStore`4.RoleClaims">
            <summary>
            Internally keeps the claims of a role.
            </summary>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.CreateAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.DeleteAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.FindByIdAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.FindByNameAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.GetClaimsAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.GetRoleIdAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.GetRoleNameAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleStore`4.UpdateAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.UserOnlyStore`5">
            <summary>
            Represents a persistence store for the specified user type, without support for roles.
            </summary>
            <typeparam name="TUser">The type representing a user.</typeparam>
            <typeparam name="TKey">The type of the primary key for a role and user.</typeparam>
            <typeparam name="TUserClaim">The type representing a claim.</typeparam>
            <typeparam name="TUserLogin">The type representing a user external login.</typeparam>
            <typeparam name="TUserToken">The type representing a user token.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.#ctor(AspNetCore.Identity.Dapper.IUsersOnlyTable{`0,`1,`2,`3,`4},AspNetCore.Identity.Dapper.IUserClaimsTable{`1,`2},AspNetCore.Identity.Dapper.IUserLoginsTable{`0,`1,`3},AspNetCore.Identity.Dapper.IUserTokensTable{`1,`4},Microsoft.AspNetCore.Identity.IdentityErrorDescriber)">
            <summary>
            Constructs a new instance of <see cref="T:AspNetCore.Identity.Dapper.UserOnlyStore`5"/>.
            </summary>
            <param name="usersTable">Abstraction for interacting with AspNetUsers table.</param>
            <param name="userClaimsTable">Abstraction for interacting with AspNetUserClaims table.</param>
            <param name="userLoginsTable">Abstraction for interacting with AspNetUserLogins table.</param>
            <param name="userTokensTable">Abstraction for interacting with AspNetUserTokens table.</param>
            <param name="describer">The <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber"/>.</param>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserOnlyStore`5.UserClaims">
            <summary>
            Internally keeps the claims of a user.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserOnlyStore`5.UserLogins">
            <summary>
            Internally keeps the logins of a user.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserOnlyStore`5.UserTokens">
            <summary>
            Internally keeps the tokens of a user.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserOnlyStore`5.UsersTable">
            <summary>
            Abstraction for interacting with AspNetUsers table.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserOnlyStore`5.UserClaimsTable">
            <summary>
            Abstraction for interacting with AspNetUserClaims table.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserOnlyStore`5.UserLoginsTable">
            <summary>
            Abstraction for interacting with AspNetUserLogins table.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserOnlyStore`5.UserTokensTable">
            <summary>
            Abstraction for interacting with AspNetUserTokens table.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserOnlyStore`5.Users">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.CreateAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.DeleteAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.FindByEmailAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.GetLoginsAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.UpdateAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.AddUserTokenAsync(`4)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.FindUserAsync(`1,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.FindUserLoginAsync(`1,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserOnlyStore`5.RemoveUserTokenAsync(`4)">
            <inheritdoc/>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.UserStore`8">
            <summary>
            Represents a persistence store for the specified user and role types.
            </summary>
            <typeparam name="TUser">The type representing a user.</typeparam>
            <typeparam name="TRole">The type representing a role.</typeparam>
            <typeparam name="TKey">The type of the primary key for a role and user.</typeparam>
            <typeparam name="TUserClaim">The type representing a claim.</typeparam>
            <typeparam name="TUserRole">The type representing a user role.</typeparam>
            <typeparam name="TUserLogin">The type representing a user external login.</typeparam>
            <typeparam name="TUserToken">The type representing a user token.</typeparam>
            <typeparam name="TRoleClaim">The type representing a role claim.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.#ctor(AspNetCore.Identity.Dapper.IUsersTable{`0,`2,`3,`4,`5,`6},AspNetCore.Identity.Dapper.IUserClaimsTable{`2,`3},AspNetCore.Identity.Dapper.IUserRolesTable{`1,`2,`4},AspNetCore.Identity.Dapper.IUserLoginsTable{`0,`2,`5},AspNetCore.Identity.Dapper.IUserTokensTable{`2,`6},AspNetCore.Identity.Dapper.IRolesTable{`1,`2,`7},Microsoft.AspNetCore.Identity.IdentityErrorDescriber)">
            <summary>
            Constructs a new instance of <see cref="T:AspNetCore.Identity.Dapper.UserStore`8"/>.
            </summary>
            <param name="usersTable">Abstraction for interacting with AspNetUsers table.</param>
            <param name="userClaimsTable">Abstraction for interacting with AspNetUserClaims table.</param>
            <param name="userRolesTable">Abstraction for interacting with AspNetUserRoles table.</param>
            <param name="userLoginsTable">Abstraction for interacting with AspNetUserLogins table.</param>
            <param name="userTokensTable">Abstraction for interacting with AspNetUserTokens table.</param>
            <param name="rolesTable">Abstraction for interacting with AspNetRoles table.</param>
            <param name="describer">The <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber"/>.</param>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserStore`8.UserClaims">
            <summary>
            Internally keeps the claims of a user.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserStore`8.UserRoles">
            <summary>
            Internally keeps the roles of a user.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserStore`8.UserLogins">
            <summary>
            Internally keeps the logins of a user.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserStore`8.UserTokens">
            <summary>
            Internally keeps the tokens of a user.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserStore`8.UsersTable">
            <summary>
            Abstraction for interacting with AspNetUsers table.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserStore`8.UserClaimsTable">
            <summary>
            Abstraction for interacting with AspNetUserClaims table.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserStore`8.UserRolesTable">
            <summary>
            Abstraction for interacting with AspNetUserRoles table.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserStore`8.UserLoginsTable">
            <summary>
            Abstraction for interacting with AspNetUserLogins table.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserStore`8.UserTokensTable">
            <summary>
            Abstraction for interacting with AspNetUserTokens table.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserStore`8.RolesTable">
            <summary>
            Abstraction for interacting with AspNetRoles table.
            </summary>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.UserStore`8.Users">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.CreateAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.DeleteAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.FindByEmailAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.FindByIdAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.FindByNameAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.GetClaimsAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.GetLoginsAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.GetRolesAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.UpdateAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.FindUserAsync(`2,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.FindUserLoginAsync(`2,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.AddUserTokenAsync(`6)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.RemoveUserTokenAsync(`6)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.FindRoleAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserStore`8.FindUserRoleAsync(`2,`2,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.IdentityTable">
            <summary>
            A base class for all identity tables.
            </summary>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IdentityTable.#ctor(AspNetCore.Identity.Dapper.IDbConnectionFactory)">
            <summary>
            Creates a new instance of <see cref="T:AspNetCore.Identity.Dapper.IdentityTable"/>.
            </summary>
            <param name="dbConnectionFactory"></param>
        </member>
        <member name="P:AspNetCore.Identity.Dapper.IdentityTable.DbConnection">
            <summary>
            The type of the database connection class used to access the store.
            </summary>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.IdentityTable.OnDispose">
            <inheritdoc/>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.RoleClaimsTable`2">
            <summary>
            The default implementation of <see cref="T:AspNetCore.Identity.Dapper.IRoleClaimsTable`2"/>.
            </summary>
            <typeparam name="TKey">The type of the primary key for a role.</typeparam>
            <typeparam name="TRoleClaim">The type of the class representing a role claim.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleClaimsTable`2.#ctor(AspNetCore.Identity.Dapper.IDbConnectionFactory)">
            <summary>
            Creates a new instance of <see cref="T:AspNetCore.Identity.Dapper.RoleClaimsTable`2"/>.
            </summary>
            <param name="dbConnectionFactory">A factory for creating instances of <see cref="T:System.Data.IDbConnection"/>.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RoleClaimsTable`2.GetClaimsAsync(`0)">
            <inheritdoc/>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.RolesTable`3">
            <summary>
            The default implementation of <see cref="T:AspNetCore.Identity.Dapper.IRolesTable`3"/>.
            </summary>
            <typeparam name="TRole">The type of the class representing a role.</typeparam>
            <typeparam name="TKey">The type of the primary key for a role.</typeparam>
            <typeparam name="TRoleClaim">The type of the class representing a role claim.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RolesTable`3.#ctor(AspNetCore.Identity.Dapper.IDbConnectionFactory)">
            <summary>
            Creates a new instance of <see cref="T:AspNetCore.Identity.Dapper.RolesTable`3"/>.
            </summary>
            <param name="dbConnectionFactory">A factory for creating instances of <see cref="T:System.Data.IDbConnection"/>.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RolesTable`3.CreateAsync(`0)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RolesTable`3.DeleteAsync(`1)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RolesTable`3.FindByIdAsync(`1)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RolesTable`3.FindByNameAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.RolesTable`3.UpdateAsync(`0,System.Collections.Generic.IList{`2})">
            <inheritdoc/>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.TableBase">
            <summary>
            A base implementation for all tables.
            </summary>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.TableBase.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.TableBase.OnDispose">
            <summary>
            A method to free any other managed objects on classes that onherit from <see cref="T:AspNetCore.Identity.Dapper.TableBase"/>.
            </summary>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.TableBase.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">Indicates whether the method call comes from a Dispose method (its value is true) or from a finalizer (its value is false).</param>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.UserClaimsTable`2">
            <summary>
            The default implementation of <see cref="T:AspNetCore.Identity.Dapper.IUserClaimsTable`2"/>.
            </summary>
            <typeparam name="TKey">The type of the primary key for a user.</typeparam>
            <typeparam name="TUserClaim">The type representing a claim.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserClaimsTable`2.#ctor(AspNetCore.Identity.Dapper.IDbConnectionFactory)">
            <summary>
            Creates a new instance of <see cref="T:AspNetCore.Identity.Dapper.UserClaimsTable`2"/>.
            </summary>
            <param name="dbConnectionFactory">A factory for creating instances of <see cref="T:System.Data.IDbConnection"/>.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserClaimsTable`2.GetClaimsAsync(`0)">
            <inheritdoc/>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.UserLoginsTable`3">
            <summary>
            The default implementation of <see cref="T:AspNetCore.Identity.Dapper.IUserLoginsTable`3"/>.
            </summary>
            <typeparam name="TUser">The type representing a user.</typeparam>
            <typeparam name="TKey">The type of the primary key for a user.</typeparam>
            <typeparam name="TUserLogin">The type representing a user external login.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserLoginsTable`3.#ctor(AspNetCore.Identity.Dapper.IDbConnectionFactory)">
            <summary>
            Creates a new instance of <see cref="T:AspNetCore.Identity.Dapper.UserLoginsTable`3"/>.
            </summary>
            <param name="dbConnectionFactory">A factory for creating instances of <see cref="T:System.Data.IDbConnection"/>.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserLoginsTable`3.GetLoginsAsync(`1)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserLoginsTable`3.FindByLoginAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserLoginsTable`3.FindUserLoginAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserLoginsTable`3.FindUserLoginAsync(`1,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.UserRolesTable`3">
            <summary>
            The default implementation of <see cref="T:AspNetCore.Identity.Dapper.IUserRolesTable`3"/>.
            </summary>
            <typeparam name="TRole">The type representing a role.</typeparam>
            <typeparam name="TKey">The type of the primary key for a user.</typeparam>
            <typeparam name="TUserRole">The type representing a user role.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserRolesTable`3.#ctor(AspNetCore.Identity.Dapper.IDbConnectionFactory)">
            <summary>
            Creates a new instance of <see cref="T:AspNetCore.Identity.Dapper.UserRolesTable`3"/>.
            </summary>
            <param name="dbConnectionFactory">A factory for creating instances of <see cref="T:System.Data.IDbConnection"/>.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserRolesTable`3.GetRolesAsync(`1)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserRolesTable`3.FindUserRoleAsync(`1,`1)">
            <inheritdoc/>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.UsersTable`6">
            <summary>
            The default implementation of <see cref="T:AspNetCore.Identity.Dapper.IUsersTable`6"/>.
            </summary>
            <typeparam name="TUser">The type representing a user.</typeparam>
            <typeparam name="TKey">The type of the primary key for a role and user.</typeparam>
            <typeparam name="TUserClaim">The type representing a claim.</typeparam>
            <typeparam name="TUserRole">The type representing a user role.</typeparam>
            <typeparam name="TUserLogin">The type representing a user external login.</typeparam>
            <typeparam name="TUserToken">The type representing a user token.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UsersTable`6.#ctor(AspNetCore.Identity.Dapper.IDbConnectionFactory)">
            <summary>
            Creates a new instance of <see cref="T:AspNetCore.Identity.Dapper.UsersTable`6"/>.
            </summary>
            <param name="dbConnectionFactory">A factory for creating instances of <see cref="T:System.Data.IDbConnection"/>.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UsersTable`6.CreateAsync(`0)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UsersTable`6.DeleteAsync(`1)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UsersTable`6.FindByIdAsync(`1)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UsersTable`6.FindByNameAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UsersTable`6.FindByEmailAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UsersTable`6.UpdateAsync(`0,System.Collections.Generic.IList{`2},System.Collections.Generic.IList{`4},System.Collections.Generic.IList{`5})">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UsersTable`6.UpdateAsync(`0,System.Collections.Generic.IList{`2},System.Collections.Generic.IList{`3},System.Collections.Generic.IList{`4},System.Collections.Generic.IList{`5})">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UsersTable`6.GetUsersInRoleAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UsersTable`6.GetUsersForClaimAsync(System.Security.Claims.Claim)">
            <inheritdoc/>
        </member>
        <member name="T:AspNetCore.Identity.Dapper.UserTokensTable`2">
            <summary>
            The default implementation of <see cref="T:AspNetCore.Identity.Dapper.IUserTokensTable`2"/>.
            </summary>
            <typeparam name="TKey">The type of the primary key for a user.</typeparam>
            <typeparam name="TUserToken">The type representing a user token.</typeparam>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserTokensTable`2.#ctor(AspNetCore.Identity.Dapper.IDbConnectionFactory)">
            <summary>
            Creates a new instance of <see cref="T:AspNetCore.Identity.Dapper.UserTokensTable`2"/>.
            </summary>
            <param name="dbConnectionFactory">A factory for creating instances of <see cref="T:System.Data.IDbConnection"/>.</param>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserTokensTable`2.GetTokensAsync(`0)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Identity.Dapper.UserTokensTable`2.FindTokenAsync(`0,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions">
            <summary>
            Extensions on <see cref="T:AspNetCore.Identity.Dapper.DapperStoreOptions"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddRoleClaimsTable``2(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.RoleClaimsTable`2"/>.
            </summary>
            <typeparam name="TRoleClaimsTable">The type of the table to register.</typeparam>
            <typeparam name="TRoleClaim">The type of the class representing a role claim.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddRoleClaimsTable``3(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.RoleClaimsTable`2"/>.
            </summary>
            <typeparam name="TRoleClaimsTable">The type of the table to register.</typeparam>
            <typeparam name="TKey">The type of the primary key for a role.</typeparam>
            <typeparam name="TRoleClaim">The type of the class representing a role claim.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddRolesTable``2(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.RolesTable`3"/>.
            </summary>
            <typeparam name="TRolesTable">The type of the table to register.</typeparam>
            <typeparam name="TRole">The type of the class representing a role.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddRolesTable``4(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.RolesTable`3"/>.
            </summary>
            <typeparam name="TRolesTable">The type of the table to register.</typeparam>
            <typeparam name="TRole">The type of the class representing a role.</typeparam>
            <typeparam name="TKey">The type of the primary key for a role.</typeparam>
            <typeparam name="TRoleClaim">The type of the class representing a role claim.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddUserClaimsTable``2(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.UserClaimsTable`2"/>.
            </summary>
            <typeparam name="TUserClaimsTable">The type of the table to register.</typeparam>
            <typeparam name="TUserClaim">The type representing a claim.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddUserClaimsTable``3(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.UserClaimsTable`2"/>.
            </summary>
            <typeparam name="TUserClaimsTable">The type of the table to register.</typeparam>
            <typeparam name="TKey">The type of the primary key for a user.</typeparam>
            <typeparam name="TUserClaim">The type representing a claim.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddUserLoginsTable``2(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.UserLoginsTable`3"/>.
            </summary>
            <typeparam name="TUserLoginsTable">The type of the table to register.</typeparam>
            <typeparam name="TUserLogin">The type representing a user external login.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddUserLoginsTable``4(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.UserLoginsTable`3"/>.
            </summary>
            <typeparam name="TUserLoginsTable">The type of the table to register.</typeparam>
            <typeparam name="TUser">The type representing a user.</typeparam>
            <typeparam name="TKey">The type of the primary key for a user.</typeparam>
            <typeparam name="TUserLogin">The type representing a user external login.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddUserRolesTable``2(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.UserRolesTable`3"/>.
            </summary>
            <typeparam name="TUserRolesTable">The type of the table to register.</typeparam>
            <typeparam name="TUserRole">The type representing a user role.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddUserRolesTable``4(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.UserRolesTable`3"/>.
            </summary>
            <typeparam name="TUserRolesTable">The type of the table to register.</typeparam>
            <typeparam name="TRole">The type representing a role.</typeparam>
            <typeparam name="TKey">The type of the primary key for a user.</typeparam>
            <typeparam name="TUserRole">The type representing a user role.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddUsersTable``2(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.UsersTable`6"/>.
            </summary>
            <typeparam name="TUsersTable">The type of the table to register.</typeparam>
            <typeparam name="TUser">The type representing a user.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddUsersTable``3(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.UsersTable`6"/>.
            </summary>
            <typeparam name="TUsersTable">The type of the table to register.</typeparam>
            <typeparam name="TUser">The type representing a user.</typeparam>
            <typeparam name="TKey">The type of the primary key for a role and user.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddUsersTable``7(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.UsersTable`6"/>.
            </summary>
            <typeparam name="TUsersTable">The type of the table to register.</typeparam>
            <typeparam name="TUser">The type representing a user.</typeparam>
            <typeparam name="TKey">The type of the primary key for a role and user.</typeparam>
            <typeparam name="TUserClaim">The type representing a claim.</typeparam>
            <typeparam name="TUserRole">The type representing a user role.</typeparam>
            <typeparam name="TUserLogin">The type representing a user external login.</typeparam>
            <typeparam name="TUserToken">The type representing a user token.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddUserTokensTable``2(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.UserTokensTable`2"/>.
            </summary>
            <typeparam name="TUserTokensTable">The type of the table to register.</typeparam>
            <typeparam name="TUserToken">The type representing a user token.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DapperStoreOptionsExtensions.AddUserTokensTable``3(AspNetCore.Identity.Dapper.DapperStoreOptions)">
            <summary>
            Add a custom implementation for <see cref="T:AspNetCore.Identity.Dapper.UserTokensTable`2"/>.
            </summary>
            <typeparam name="TUserTokensTable">The type of the table to register.</typeparam>
            <typeparam name="TKey">The type of the primary key for a role and user.</typeparam>
            <typeparam name="TUserToken">The type representing a user token.</typeparam>
            <param name="options">Options for configuring Dapper stores.</param>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.IdentityBuilderExtensions">
            <summary>
            Extension methods on <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IdentityBuilderExtensions.AddDapperStores(Microsoft.AspNetCore.Identity.IdentityBuilder,System.Action{AspNetCore.Identity.Dapper.DapperStoreOptions})">
            <summary>
            Adds a Dapper implementation of ASP.NET Core Identity stores.
            </summary>
            <param name="builder">Helper functions for configuring identity services.</param>
            <param name="configureAction">Delegate for configuring options </param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder"/> instance this method extends.</returns>
        </member>
    </members>
</doc>
